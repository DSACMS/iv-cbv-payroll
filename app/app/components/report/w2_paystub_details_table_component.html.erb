<%= render(TableComponent.new(is_responsive: @is_responsive, class_names: "payment-details-table")) do |table| %>
  <%= table.with_subheader_row(class_names: "subheader-row base-lightest") do |row| %>
    <%= row.with_data_cell(is_header: true, class_names: "text-nowrap")
          .with_content(t("#{translation_scope}.pay_information")) %>
    <%= row.with_data_cell(is_header: true, class_names: "text-nowrap")
          .with_content(t("#{translation_scope}.details")) %>
  <% end %>
  <%= table.with_data_point(:pay_date, @paystub.pay_date) %>
  <% if @income&.pay_frequency %>
    <%= table.with_data_point(:pay_period_with_frequency, @paystub.start, @paystub.end, pay_frequency_text, highlight: @is_caseworker) %>
  <% else %>
    <%= table.with_data_point(:pay_period_with_frequency, @paystub.start, @paystub.end, t("cbv.payment_details.show.frequency_unknown"), highlight: @is_caseworker) %>
  <% end %>
  <%= table.with_data_point(:pay_gross, @paystub.gross_pay_amount, highlight: @is_caseworker) %>
  <%= table.with_data_point(:number_of_hours_worked, @paystub.hours, highlight: @is_caseworker) %>
  <% @paystub.hours_by_earning_category.each do |category, total_hours| %>
    <%= table.with_data_point(:earnings_entry, category, total_hours) %>
  <% end %>
  <%= table.with_data_point(:net_pay_amount, @paystub.net_pay_amount) %>
  <% @paystub.deductions.filter { |deduction| deduction.amount.to_f > 0 }.each do |deduction| %>
    <%= table.with_data_point(:deduction, deduction.category, deduction.tax, deduction.amount) %>
  <% end %>
  <%= table.with_data_point(:pay_gross_ytd, @paystub.gross_pay_ytd) %>
<% end %>
