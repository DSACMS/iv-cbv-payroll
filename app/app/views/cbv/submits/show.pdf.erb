<% content_for :title, t(".pdf.client.header") %>

<strong>
  <span class="cbv-header__pilot-name font-sans-md text-middle">
    <%= t("shared.pilot_name") %>
  </span>

  <% if current_agency.present? %>
    <span class="cbv-header__separator text-primary font-sans-md text-middle">|</span>

    <% if current_agency&.logo_path.present? %>
      <div class="display-inline-block text-middle">
        <%= image_tag wicked_pdf_asset_base64(current_agency.logo_path), class: "cbv-header__agency-logo--#{current_agency.id}" %>
      </div>
    <% else %>
      <span class="text-middle font-sans-md text-no-wrap"><%= agency_translation(".pdf.agency_header_name") %></span>
    <% end %>
  <% end %>
</strong>

<h1><%= t(".pdf.client.header") %></h1>
<% if is_caseworker %>
  <p><%= t(".pdf.caseworker.description") %></p>
  <div class="usa-alert usa-alert--info">
    <div class="usa-alert__body">
      <p class="usa-alert__text">
        <strong><%= t(".pdf.caseworker.how_to_header") %></strong>
        <%= t(".pdf.caseworker.how_to") %>
      </p>
    </div>
  </div>
<% else %>
  <p><%= t(".pdf.client.description", agency_acronym: agency_translation("shared.agency_acronym")) %></p>
<% end %>

<h2><%= t(".pdf.client.client_report_information") %></h2>
<% if @cbv_flow.cbv_applicant.applicant_attributes.present? %>
  <sup>1</sup><span><%= t(".pdf.caseworker.client_provided_information") %></span>
<% end %>

<%= render(TableComponent.new) do |table| %>
  <%= table.with_header do %>
    <h3 class="margin-0"><%= t(".pdf.shared.client_information") %></h3>
  <% end %>
  <% @cbv_flow.cbv_applicant.applicant_attributes.each do |item| %>
    <% if @cbv_flow.cbv_applicant[item].present? %>
      <% if item == :date_of_birth %>
        <%= table.with_row(t("cbv.applicant_informations.#{@cbv_flow.client_agency_id}.fields.#{item}.super_one_html"), format_date(@cbv_flow.cbv_applicant[item])) %>
      <% else %>
        <%= table.with_row(t("cbv.applicant_informations.#{@cbv_flow.client_agency_id}.fields.#{item}.super_one_html"), @cbv_flow.cbv_applicant[item]) %>
      <% end %>
    <% end %>
  <% end %>

  <% if is_caseworker %>
    <% ClientAgency::CaseworkerReportSpecificFieldDecider.caseworker_specific_fields(@cbv_flow).each do |field_name, field_value| %>
      <%= table.with_row(t(field_name), field_value) %>
    <% end %>
  <% end %>
  <% ClientAgency::CaseworkerReportSpecificFieldDecider.applicant_specific_fields(@cbv_flow).each do |field, value| %>
    <%= table.with_row(t(field), value) %>
  <% end %>
<% end %>

<%= render(TableComponent.new) do |table| %>
  <%= table.with_header do %>
    <h3 class="margin-0"><%= t(".pdf.shared.report_details") %></h3>
  <% end %>
  <% if @cbv_flow.confirmation_code.present? %>
    <%= table.with_row(t(".pdf.shared.confirmation_code"), @cbv_flow.confirmation_code) %>
  <% end %>
  <% unless current_agency?(:az_des) || current_agency?(:la_ldh) || current_agency?(:pa_dhs) %>
    <%= table.with_row(t(".application_or_recertification_date"), format_parsed_date(@cbv_flow.cbv_applicant.snap_application_date)) %>
  <% end %>
  <%= table.with_row(t(".pdf.client.date_created"), format_parsed_date(@cbv_flow.consented_to_authorized_use_at)) %>
  <%= table.with_row(t(".pdf.client.date_range"), "#{format_parsed_date(aggregator_report.from_date)} to #{format_parsed_date(aggregator_report.to_date)}") %>
  <% if is_caseworker %>
    <%= table.with_row(t(".pdf.caseworker.agreement_consent_timestamp"), @cbv_flow.consented_to_authorized_use_at) %>
  <% end %>
<% end %>

<h2><%= t(".pdf.client.employment_payment_details") %></h2>

<%# These variables must be initialized outside the loop for the logic to work %>
<% first_w2_job_index = false %>
<% first_gig_job_index = false %>
<% aggregator_report.summarize_by_employer.each_with_index do |(account_id, summary), index| %>
  <% employment = summary[:employment] %>
  <% employer_name = employment&.employer_name %>
  <% is_w2_worker = employment&.employment_type == :w2 %>
  <% is_gig_worker = employment&.employment_type == :gig %>
  <% is_first_w2_job = is_w2_worker && ((first_w2_job_index ||= index) == index) %>
  <% is_first_gig_job = is_gig_worker && ((first_gig_job_index ||= index) == index) %>
  <h3><%= t(".table_caption_no_name", number: index + 1) %>: <%= employer_name %></h3>

  <%= render(TableComponent.new) do |table| %>
    <%= table.with_header do %>
      <h4 class="margin-0">
        <% if employer_name %>
          <%= employer_name %> &mdash;
        <% end %>
        <%= t(".pdf.shared.employment_information") %>
      </h4>
    <% end %>
    <% if is_caseworker && summary[:has_identity_data] %>
      <%= table.with_data_point(:client_full_name, summary[:identity].full_name) %>
      <%= table.with_data_point(:ssn, summary[:identity].ssn) %>
    <% end %>
    <% if employment&.employer_name %>
      <%= table.with_data_point(:employer_phone, employment.employer_phone_number) %>
      <%= table.with_data_point(:employer_address, employment.employer_address) %>
      <%= table.with_data_point(:employment_status, employment.status) %>
      <%= table.with_data_point(:employment_start_date, employment.start_date) %>
      <%= table.with_data_point(:employment_end_date, employment.termination_date) %>
    <% end %>
    <% if summary[:income]&.pay_frequency && is_w2_worker %>
      <%= table.with_data_point(:pay_frequency, summary[:income].pay_frequency&.humanize) %>
      <%= table.with_data_point(:hourly_rate, summary[:income].compensation_amount, summary[:income].compensation_unit) %>
    <% end %>
  <% end %>

  <% if is_w2_worker %>
    <%= render(Report::W2MonthlySummaryTableComponent.new(@aggregator_report, account_id, is_caseworker: is_caseworker, is_responsive: false, is_pdf: true, show_footnote: is_first_w2_job)) %>
    <h3><%= t(".pdf.shared.payments_and_deductions_header", employer_name: employer_name) %></h3>
    <% summary[:paystubs].each do |paystub| %>
      <%= render(Report::W2PaystubDetailsTableComponent.new(
        paystub,
        income: summary[:income],
        is_caseworker: is_caseworker,
        is_responsive: false
      )) %>
    <% end %>
    <% if summary[:paystubs].empty? %>
      <%= render(TableComponent.new) do |table| %>
        <%= table.with_header do %>
          <h4 class="margin-0">
            <% if employer_name %>
              <%= employer_name %> &mdash;
            <% end %>
            <%= t(".none_found") %>
          </h4>
        <% end %>
        <%= table.with_row(t(".none_found_confirmed")) %>
      <% end %>
    <% end %>
  <% else %>
    <%= render(Report::GigMonthlySummaryTableComponent.new(@aggregator_report, account_id, is_caseworker: is_caseworker, is_responsive: false, is_pdf: true, show_footnote: is_first_gig_job)) %>
  <% end %>

  <% if @cbv_flow.additional_information.dig(account_id, "comment").present? %>
    <h2><%= t(".additional_information_title") %></h2>

    <p><%= @cbv_flow.additional_information.dig(account_id, "comment") %></p>
  <% end %>
<% end %>
