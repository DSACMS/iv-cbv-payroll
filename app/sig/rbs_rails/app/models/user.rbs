class User < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::User, ::User::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def client_agency_id: () -> ::String

    def client_agency_id=: (::String) -> ::String

    def client_agency_id?: () -> bool

    def client_agency_id_changed?: () -> bool

    def client_agency_id_change: () -> [ ::String?, ::String? ]

    def client_agency_id_will_change!: () -> void

    def client_agency_id_was: () -> ::String?

    def client_agency_id_previously_changed?: () -> bool

    def client_agency_id_previous_change: () -> ::Array[::String?]?

    def client_agency_id_previously_was: () -> ::String?

    def client_agency_id_before_last_save: () -> ::String?

    def client_agency_id_change_to_be_saved: () -> ::Array[::String?]?

    def client_agency_id_in_database: () -> ::String?

    def saved_change_to_client_agency_id: () -> ::Array[::String?]?

    def saved_change_to_client_agency_id?: () -> bool

    def will_save_change_to_client_agency_id?: () -> bool

    def restore_client_agency_id!: () -> void

    def clear_client_agency_id_change: () -> void

    def email: () -> ::String

    def email=: (::String) -> ::String

    def email?: () -> bool

    def email_changed?: () -> bool

    def email_change: () -> [ ::String?, ::String? ]

    def email_will_change!: () -> void

    def email_was: () -> ::String?

    def email_previously_changed?: () -> bool

    def email_previous_change: () -> ::Array[::String?]?

    def email_previously_was: () -> ::String?

    def email_before_last_save: () -> ::String?

    def email_change_to_be_saved: () -> ::Array[::String?]?

    def email_in_database: () -> ::String?

    def saved_change_to_email: () -> ::Array[::String?]?

    def saved_change_to_email?: () -> bool

    def will_save_change_to_email?: () -> bool

    def restore_email!: () -> void

    def clear_email_change: () -> void

    def encrypted_password: () -> ::String

    def encrypted_password=: (::String) -> ::String

    def encrypted_password?: () -> bool

    def encrypted_password_changed?: () -> bool

    def encrypted_password_change: () -> [ ::String?, ::String? ]

    def encrypted_password_will_change!: () -> void

    def encrypted_password_was: () -> ::String?

    def encrypted_password_previously_changed?: () -> bool

    def encrypted_password_previous_change: () -> ::Array[::String?]?

    def encrypted_password_previously_was: () -> ::String?

    def encrypted_password_before_last_save: () -> ::String?

    def encrypted_password_change_to_be_saved: () -> ::Array[::String?]?

    def encrypted_password_in_database: () -> ::String?

    def saved_change_to_encrypted_password: () -> ::Array[::String?]?

    def saved_change_to_encrypted_password?: () -> bool

    def will_save_change_to_encrypted_password?: () -> bool

    def restore_encrypted_password!: () -> void

    def clear_encrypted_password_change: () -> void

    def reset_password_token: () -> ::String?

    def reset_password_token=: (::String?) -> ::String?

    def reset_password_token?: () -> bool

    def reset_password_token_changed?: () -> bool

    def reset_password_token_change: () -> [ ::String?, ::String? ]

    def reset_password_token_will_change!: () -> void

    def reset_password_token_was: () -> ::String?

    def reset_password_token_previously_changed?: () -> bool

    def reset_password_token_previous_change: () -> ::Array[::String?]?

    def reset_password_token_previously_was: () -> ::String?

    def reset_password_token_before_last_save: () -> ::String?

    def reset_password_token_change_to_be_saved: () -> ::Array[::String?]?

    def reset_password_token_in_database: () -> ::String?

    def saved_change_to_reset_password_token: () -> ::Array[::String?]?

    def saved_change_to_reset_password_token?: () -> bool

    def will_save_change_to_reset_password_token?: () -> bool

    def restore_reset_password_token!: () -> void

    def clear_reset_password_token_change: () -> void

    def reset_password_sent_at: () -> ::ActiveSupport::TimeWithZone?

    def reset_password_sent_at=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def reset_password_sent_at?: () -> bool

    def reset_password_sent_at_changed?: () -> bool

    def reset_password_sent_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def reset_password_sent_at_will_change!: () -> void

    def reset_password_sent_at_was: () -> ::ActiveSupport::TimeWithZone?

    def reset_password_sent_at_previously_changed?: () -> bool

    def reset_password_sent_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def reset_password_sent_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def reset_password_sent_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def reset_password_sent_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def reset_password_sent_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_reset_password_sent_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_reset_password_sent_at?: () -> bool

    def will_save_change_to_reset_password_sent_at?: () -> bool

    def restore_reset_password_sent_at!: () -> void

    def clear_reset_password_sent_at_change: () -> void

    def remember_created_at: () -> ::ActiveSupport::TimeWithZone?

    def remember_created_at=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def remember_created_at?: () -> bool

    def remember_created_at_changed?: () -> bool

    def remember_created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def remember_created_at_will_change!: () -> void

    def remember_created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def remember_created_at_previously_changed?: () -> bool

    def remember_created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def remember_created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def remember_created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def remember_created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def remember_created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_remember_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_remember_created_at?: () -> bool

    def will_save_change_to_remember_created_at?: () -> bool

    def restore_remember_created_at!: () -> void

    def clear_remember_created_at_change: () -> void

    def sign_in_count: () -> ::Integer

    def sign_in_count=: (::Integer) -> ::Integer

    def sign_in_count?: () -> bool

    def sign_in_count_changed?: () -> bool

    def sign_in_count_change: () -> [ ::Integer?, ::Integer? ]

    def sign_in_count_will_change!: () -> void

    def sign_in_count_was: () -> ::Integer?

    def sign_in_count_previously_changed?: () -> bool

    def sign_in_count_previous_change: () -> ::Array[::Integer?]?

    def sign_in_count_previously_was: () -> ::Integer?

    def sign_in_count_before_last_save: () -> ::Integer?

    def sign_in_count_change_to_be_saved: () -> ::Array[::Integer?]?

    def sign_in_count_in_database: () -> ::Integer?

    def saved_change_to_sign_in_count: () -> ::Array[::Integer?]?

    def saved_change_to_sign_in_count?: () -> bool

    def will_save_change_to_sign_in_count?: () -> bool

    def restore_sign_in_count!: () -> void

    def clear_sign_in_count_change: () -> void

    def current_sign_in_at: () -> ::ActiveSupport::TimeWithZone?

    def current_sign_in_at=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def current_sign_in_at?: () -> bool

    def current_sign_in_at_changed?: () -> bool

    def current_sign_in_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def current_sign_in_at_will_change!: () -> void

    def current_sign_in_at_was: () -> ::ActiveSupport::TimeWithZone?

    def current_sign_in_at_previously_changed?: () -> bool

    def current_sign_in_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def current_sign_in_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def current_sign_in_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def current_sign_in_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def current_sign_in_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_current_sign_in_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_current_sign_in_at?: () -> bool

    def will_save_change_to_current_sign_in_at?: () -> bool

    def restore_current_sign_in_at!: () -> void

    def clear_current_sign_in_at_change: () -> void

    def last_sign_in_at: () -> ::ActiveSupport::TimeWithZone?

    def last_sign_in_at=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def last_sign_in_at?: () -> bool

    def last_sign_in_at_changed?: () -> bool

    def last_sign_in_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def last_sign_in_at_will_change!: () -> void

    def last_sign_in_at_was: () -> ::ActiveSupport::TimeWithZone?

    def last_sign_in_at_previously_changed?: () -> bool

    def last_sign_in_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def last_sign_in_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def last_sign_in_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def last_sign_in_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def last_sign_in_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_last_sign_in_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_last_sign_in_at?: () -> bool

    def will_save_change_to_last_sign_in_at?: () -> bool

    def restore_last_sign_in_at!: () -> void

    def clear_last_sign_in_at_change: () -> void

    def current_sign_in_ip: () -> ::String?

    def current_sign_in_ip=: (::String?) -> ::String?

    def current_sign_in_ip?: () -> bool

    def current_sign_in_ip_changed?: () -> bool

    def current_sign_in_ip_change: () -> [ ::String?, ::String? ]

    def current_sign_in_ip_will_change!: () -> void

    def current_sign_in_ip_was: () -> ::String?

    def current_sign_in_ip_previously_changed?: () -> bool

    def current_sign_in_ip_previous_change: () -> ::Array[::String?]?

    def current_sign_in_ip_previously_was: () -> ::String?

    def current_sign_in_ip_before_last_save: () -> ::String?

    def current_sign_in_ip_change_to_be_saved: () -> ::Array[::String?]?

    def current_sign_in_ip_in_database: () -> ::String?

    def saved_change_to_current_sign_in_ip: () -> ::Array[::String?]?

    def saved_change_to_current_sign_in_ip?: () -> bool

    def will_save_change_to_current_sign_in_ip?: () -> bool

    def restore_current_sign_in_ip!: () -> void

    def clear_current_sign_in_ip_change: () -> void

    def last_sign_in_ip: () -> ::String?

    def last_sign_in_ip=: (::String?) -> ::String?

    def last_sign_in_ip?: () -> bool

    def last_sign_in_ip_changed?: () -> bool

    def last_sign_in_ip_change: () -> [ ::String?, ::String? ]

    def last_sign_in_ip_will_change!: () -> void

    def last_sign_in_ip_was: () -> ::String?

    def last_sign_in_ip_previously_changed?: () -> bool

    def last_sign_in_ip_previous_change: () -> ::Array[::String?]?

    def last_sign_in_ip_previously_was: () -> ::String?

    def last_sign_in_ip_before_last_save: () -> ::String?

    def last_sign_in_ip_change_to_be_saved: () -> ::Array[::String?]?

    def last_sign_in_ip_in_database: () -> ::String?

    def saved_change_to_last_sign_in_ip: () -> ::Array[::String?]?

    def saved_change_to_last_sign_in_ip?: () -> bool

    def will_save_change_to_last_sign_in_ip?: () -> bool

    def restore_last_sign_in_ip!: () -> void

    def clear_last_sign_in_ip_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def invalidated_session_ids: () -> untyped?

    def invalidated_session_ids=: (untyped?) -> untyped?

    def invalidated_session_ids?: () -> bool

    def invalidated_session_ids_changed?: () -> bool

    def invalidated_session_ids_change: () -> [ untyped?, untyped? ]

    def invalidated_session_ids_will_change!: () -> void

    def invalidated_session_ids_was: () -> untyped?

    def invalidated_session_ids_previously_changed?: () -> bool

    def invalidated_session_ids_previous_change: () -> ::Array[untyped?]?

    def invalidated_session_ids_previously_was: () -> untyped?

    def invalidated_session_ids_before_last_save: () -> untyped?

    def invalidated_session_ids_change_to_be_saved: () -> ::Array[untyped?]?

    def invalidated_session_ids_in_database: () -> untyped?

    def saved_change_to_invalidated_session_ids: () -> ::Array[untyped?]?

    def saved_change_to_invalidated_session_ids?: () -> bool

    def will_save_change_to_invalidated_session_ids?: () -> bool

    def restore_invalidated_session_ids!: () -> void

    def clear_invalidated_session_ids_change: () -> void

    def is_service_account: () -> bool?

    def is_service_account=: (bool?) -> bool?

    def is_service_account?: () -> bool

    def is_service_account_changed?: () -> bool

    def is_service_account_change: () -> [ bool?, bool? ]

    def is_service_account_will_change!: () -> void

    def is_service_account_was: () -> bool?

    def is_service_account_previously_changed?: () -> bool

    def is_service_account_previous_change: () -> ::Array[bool?]?

    def is_service_account_previously_was: () -> bool?

    def is_service_account_before_last_save: () -> bool?

    def is_service_account_change_to_be_saved: () -> ::Array[bool?]?

    def is_service_account_in_database: () -> bool?

    def saved_change_to_is_service_account: () -> ::Array[bool?]?

    def saved_change_to_is_service_account?: () -> bool

    def will_save_change_to_is_service_account?: () -> bool

    def restore_is_service_account!: () -> void

    def clear_is_service_account_change: () -> void
  end
  include GeneratedAttributeMethods
  def api_access_tokens: () -> ::ApiAccessToken::ActiveRecord_Associations_CollectionProxy
  def api_access_tokens=: (::ApiAccessToken::ActiveRecord_Associations_CollectionProxy | ::Array[::ApiAccessToken]) -> (::ApiAccessToken::ActiveRecord_Associations_CollectionProxy | ::Array[::ApiAccessToken])
  def api_access_token_ids: () -> ::Array[::Integer]
  def api_access_token_ids=: (::Array[::Integer]) -> ::Array[::Integer]

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::User::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::User, ::Integer]
    include ::Enumerable[::User]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::User::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::User, ::Integer]
  end
end
