class CbvFlowInvitation < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::CbvFlowInvitation, ::CbvFlowInvitation::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def email_address: () -> ::String?

    def email_address=: (::String?) -> ::String?

    def email_address?: () -> bool

    def email_address_changed?: () -> bool

    def email_address_change: () -> [ ::String?, ::String? ]

    def email_address_will_change!: () -> void

    def email_address_was: () -> ::String?

    def email_address_previously_changed?: () -> bool

    def email_address_previous_change: () -> ::Array[::String?]?

    def email_address_previously_was: () -> ::String?

    def email_address_before_last_save: () -> ::String?

    def email_address_change_to_be_saved: () -> ::Array[::String?]?

    def email_address_in_database: () -> ::String?

    def saved_change_to_email_address: () -> ::Array[::String?]?

    def saved_change_to_email_address?: () -> bool

    def will_save_change_to_email_address?: () -> bool

    def restore_email_address!: () -> void

    def clear_email_address_change: () -> void

    def auth_token: () -> ::String?

    def auth_token=: (::String?) -> ::String?

    def auth_token?: () -> bool

    def auth_token_changed?: () -> bool

    def auth_token_change: () -> [ ::String?, ::String? ]

    def auth_token_will_change!: () -> void

    def auth_token_was: () -> ::String?

    def auth_token_previously_changed?: () -> bool

    def auth_token_previous_change: () -> ::Array[::String?]?

    def auth_token_previously_was: () -> ::String?

    def auth_token_before_last_save: () -> ::String?

    def auth_token_change_to_be_saved: () -> ::Array[::String?]?

    def auth_token_in_database: () -> ::String?

    def saved_change_to_auth_token: () -> ::Array[::String?]?

    def saved_change_to_auth_token?: () -> bool

    def will_save_change_to_auth_token?: () -> bool

    def restore_auth_token!: () -> void

    def clear_auth_token_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def client_agency_id: () -> ::String?

    def client_agency_id=: (::String?) -> ::String?

    def client_agency_id?: () -> bool

    def client_agency_id_changed?: () -> bool

    def client_agency_id_change: () -> [ ::String?, ::String? ]

    def client_agency_id_will_change!: () -> void

    def client_agency_id_was: () -> ::String?

    def client_agency_id_previously_changed?: () -> bool

    def client_agency_id_previous_change: () -> ::Array[::String?]?

    def client_agency_id_previously_was: () -> ::String?

    def client_agency_id_before_last_save: () -> ::String?

    def client_agency_id_change_to_be_saved: () -> ::Array[::String?]?

    def client_agency_id_in_database: () -> ::String?

    def saved_change_to_client_agency_id: () -> ::Array[::String?]?

    def saved_change_to_client_agency_id?: () -> bool

    def will_save_change_to_client_agency_id?: () -> bool

    def restore_client_agency_id!: () -> void

    def clear_client_agency_id_change: () -> void

    def redacted_at: () -> ::ActiveSupport::TimeWithZone?

    def redacted_at=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def redacted_at?: () -> bool

    def redacted_at_changed?: () -> bool

    def redacted_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def redacted_at_will_change!: () -> void

    def redacted_at_was: () -> ::ActiveSupport::TimeWithZone?

    def redacted_at_previously_changed?: () -> bool

    def redacted_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def redacted_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def redacted_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def redacted_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def redacted_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_redacted_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_redacted_at?: () -> bool

    def will_save_change_to_redacted_at?: () -> bool

    def restore_redacted_at!: () -> void

    def clear_redacted_at_change: () -> void

    def user_id: () -> ::Integer?

    def user_id=: (::Integer?) -> ::Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ ::Integer?, ::Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> ::Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> ::Array[::Integer?]?

    def user_id_previously_was: () -> ::Integer?

    def user_id_before_last_save: () -> ::Integer?

    def user_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def user_id_in_database: () -> ::Integer?

    def saved_change_to_user_id: () -> ::Array[::Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def language: () -> ::String?

    def language=: (::String?) -> ::String?

    def language?: () -> bool

    def language_changed?: () -> bool

    def language_change: () -> [ ::String?, ::String? ]

    def language_will_change!: () -> void

    def language_was: () -> ::String?

    def language_previously_changed?: () -> bool

    def language_previous_change: () -> ::Array[::String?]?

    def language_previously_was: () -> ::String?

    def language_before_last_save: () -> ::String?

    def language_change_to_be_saved: () -> ::Array[::String?]?

    def language_in_database: () -> ::String?

    def saved_change_to_language: () -> ::Array[::String?]?

    def saved_change_to_language?: () -> bool

    def will_save_change_to_language?: () -> bool

    def restore_language!: () -> void

    def clear_language_change: () -> void

    def cbv_applicant_id: () -> ::Integer?

    def cbv_applicant_id=: (::Integer?) -> ::Integer?

    def cbv_applicant_id?: () -> bool

    def cbv_applicant_id_changed?: () -> bool

    def cbv_applicant_id_change: () -> [ ::Integer?, ::Integer? ]

    def cbv_applicant_id_will_change!: () -> void

    def cbv_applicant_id_was: () -> ::Integer?

    def cbv_applicant_id_previously_changed?: () -> bool

    def cbv_applicant_id_previous_change: () -> ::Array[::Integer?]?

    def cbv_applicant_id_previously_was: () -> ::Integer?

    def cbv_applicant_id_before_last_save: () -> ::Integer?

    def cbv_applicant_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def cbv_applicant_id_in_database: () -> ::Integer?

    def saved_change_to_cbv_applicant_id: () -> ::Array[::Integer?]?

    def saved_change_to_cbv_applicant_id?: () -> bool

    def will_save_change_to_cbv_applicant_id?: () -> bool

    def restore_cbv_applicant_id!: () -> void

    def clear_cbv_applicant_id_change: () -> void

    def expires_at: () -> ::ActiveSupport::TimeWithZone?

    def expires_at=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def expires_at?: () -> bool

    def expires_at_changed?: () -> bool

    def expires_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def expires_at_will_change!: () -> void

    def expires_at_was: () -> ::ActiveSupport::TimeWithZone?

    def expires_at_previously_changed?: () -> bool

    def expires_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def expires_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def expires_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def expires_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def expires_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_expires_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_expires_at?: () -> bool

    def will_save_change_to_expires_at?: () -> bool

    def restore_expires_at!: () -> void

    def clear_expires_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def cbv_flows: () -> ::CbvFlow::ActiveRecord_Associations_CollectionProxy
  def cbv_flows=: (::CbvFlow::ActiveRecord_Associations_CollectionProxy | ::Array[::CbvFlow]) -> (::CbvFlow::ActiveRecord_Associations_CollectionProxy | ::Array[::CbvFlow])
  def cbv_flow_ids: () -> ::Array[::Integer]
  def cbv_flow_ids=: (::Array[::Integer]) -> ::Array[::Integer]

  def user: () -> ::User
  def user=: (::User?) -> ::User?
  def reload_user: () -> ::User?
  def build_user: (untyped) -> ::User
  def create_user: (untyped) -> ::User
  def create_user!: (untyped) -> ::User
  def cbv_applicant: () -> ::CbvApplicant?
  def cbv_applicant=: (::CbvApplicant?) -> ::CbvApplicant?
  def reload_cbv_applicant: () -> ::CbvApplicant?
  def build_cbv_applicant: (untyped) -> ::CbvApplicant
  def create_cbv_applicant: (untyped) -> ::CbvApplicant
  def create_cbv_applicant!: (untyped) -> ::CbvApplicant

  def self.unstarted: () -> ::CbvFlowInvitation::ActiveRecord_Relation

  module GeneratedRelationMethods
    def unstarted: () -> ::CbvFlowInvitation::ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::CbvFlowInvitation::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::CbvFlowInvitation, ::Integer]
    include ::Enumerable[::CbvFlowInvitation]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::CbvFlowInvitation::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::CbvFlowInvitation, ::Integer]
  end
end
