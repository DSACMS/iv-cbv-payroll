#! /usr/bin/env bash
#
# This hook runs on `git commit` and will prevent you from committing without
# approval from the linter and tests.
#
# To run, this file must be symlinked to:
# .git/hooks/pre-commit
#
# To bypass this hook, run:
# $ git commit --no-verify
# $ git commit -n

# Check if there are any staged changes
if git diff --cached --quiet; then
    echo "No changes to commit"
    exit 0
fi

echo "Running linter..."
(cd app && bundle exec rubocop --autocorrect-all)
linter_status=$?

if [ $linter_status -ne 0 ]; then
    echo "Fix remaining linting issues before committing. Run 'git commit -n' to bypass linter."
    exit 1
fi

# Stage the files that were auto-corrected by RuboCop
git add app/**/*.rb

echo "Running JavaScript/TypeScript formatter..."
(cd app && npm run format)

echo "Running Terraform formatter"
files=$(git diff --cached --name-only terraform)
for f in $files
do
  # Format any *.tf files that were cached/staged
  if [ -e "$f" ] && [[ $f == *.tf ]]; then
    terraform fmt "$f"
    git add "$f"
  fi
done

echo "Running ticket number formatter"
# File containing the commit message
COMMIT_MSG_FILE=$1

# Get the current branch name
BRANCH_NAME=$(git symbolic-ref --short HEAD)

# Only proceed if branch starts with ffs- or FFS- followed by numbers
if [[ $BRANCH_NAME =~ ^[Ff][Ff][Ss]-([0-9]+) ]]; then
    TICKET="${BASH_REMATCH[1]}"
    
    # Read the current commit message
    COMMIT_MSG=$(cat $COMMIT_MSG_FILE)

    # Check if the commit message already starts with the ticket number
    if [[ $COMMIT_MSG != FFS-$TICKET:* ]]; then
        sed -i.bak '1s|^|FFS-'"$TICKET"': |' "$COMMIT_MSG_FILE"
    fi
fi