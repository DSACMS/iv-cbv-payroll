#! /usr/bin/env bash
#
# This hook runs on `git commit` and will prevent you from committing without
# approval from the linter and tests.
#
# To run, this file must be symlinked to:
# .git/hooks/pre-commit
#
# To bypass this hook, run:
# $ git commit --no-verify
# $ git commit -n

echo "Running linter..."
bundle exec rake standard
linter_status=$?

if [ $linter_status -ne 0 ]; then
    echo "Fix above before committing. Run 'git commit -n' to bypass linter."
    exit 1
fi

echo "Running Terraform formatter"
files=$(git diff --cached --name-only terraform)
for f in $files
do
  # Format any *.tf files that were cached/staged
  if [ -e "$f" ] && [[ $f == *.tf ]]; then
    terraform fmt "$f"
    git add "$f"
  fi
done

# File containing the commit message
COMMIT_MSG_FILE=$1

# Get the current branch name
BRANCH_NAME=$(git symbolic-ref --short HEAD)

# Extract the ticket number from the branch name
# This sed command looks for 'ffs' followed by an optional single character delimiter,
# then captures all following digits
TICKET=$(echo $BRANCH_NAME | sed -E 's/.*ffs[-_]?([0-9]+).*/\1/' | tr '[:lower:]' '[:upper:]')

if [ -n "$TICKET" ]; then
    # Read the current commit message
    COMMIT_MSG=$(cat $COMMIT_MSG_FILE)

    # Check if the commit message already starts with the ticket number
    if [[ $COMMIT_MSG != FFS-$TICKET:* ]]; then
        # Prepend the ticket number to the commit message
        sed -i.bak "1s/^/FFS-$TICKET: /" $COMMIT_MSG_FILE
    fi
fi