name: Deploy

on:
  workflow_call:
    inputs:
      app_name:
        description: "name of application folder under infra directory"
        required: true
        type: string
      environment:
        description: "the name of the application environment (e.g. dev, staging, prod)"
        required: true
        type: string
defaults:
  run:
    working-directory: ./app

concurrency: cd-${{inputs.app_name}}-${{ inputs.environment }}

jobs:
  # Don't need to call the build-and-publish workflow since the database-migrations
  # workflow already calls it
  database-migrations:
    name: Database migrations
    uses: ./.github/workflows/database-migrations.yml
    with:
      app_name: ${{ inputs.app_name }}
      environment: ${{ inputs.environment }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [database-migrations]
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: ./.github/actions/setup-terraform

      - name: Configure AWS credentials
        uses: ./.github/actions/configure-aws-credentials
        with:
          app_name: ${{ inputs.app_name }}
          environment: ${{ inputs.environment }}

      - name: Deploy release
        working-directory: .
        run: make release-deploy APP_NAME=${{ inputs.app_name }} ENVIRONMENT=${{ inputs.environment }}

      - name: Push git tag with timestamp
        if: success()
        run: |
          # Create a tag like "deploy/prod/2024-10-09-11:00:00".
          #
          # Skip tagging in "dev" environment (our demo site) since we deploy
          # on every commit.
          if [ "${{ inputs.environment }}" != "dev" ]; then
            export TZ="America/New_York"
            TAG_NAME="deploy/${{ inputs.environment }}/$(date +'%Y-%m-%d-%H:%M:%S')"
            git config --local user.name "github-actions"
            git config --local user.email "github-actions@github.com"
            git tag "$TAG_NAME"
            git push origin "$TAG_NAME"
          fi
